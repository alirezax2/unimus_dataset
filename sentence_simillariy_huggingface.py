# -*- coding: utf-8 -*-
"""sentence simillariy huggingface.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1k6Veov8SAPlIKXbfPJIccPZl6IoOxeTx
"""

!pip install sentence_transformers
# !pip install sklearn

import pandas as pd
from sentence_transformers import SentenceTransformer
from sklearn.cluster import KMeans

# Assuming `df` is your DataFrame with a column "description"
df = pd.DataFrame({
    "description": [
        "This is the first example description.",
        "Another example with slightly different words.",
        "A totally different description.",
        "Yet another example with misspellings or typos.",
        "More examples that vary in length and content.",
        "first example .",
        "Another example ",
        "A totally different .",
        "Yet another example with misspellings or typos.",
        "More examples "

        # Add more descriptions here...
    ]
})

# Step 1: Load a pre-trained Hugging Face model for sentence embeddings
model = SentenceTransformer('all-MiniLM-L6-v2')  # Use a small model for efficiency

# Step 2: Generate embeddings for each description
embeddings = model.encode(df["description"].tolist())

# Step 3: Apply KMeans clustering to group into 5 clusters
num_clusters = 3
kmeans = KMeans(n_clusters=num_clusters, random_state=0)
df['cluster'] = kmeans.fit_predict(embeddings)

# Print the resulting clusters
for cluster_num in range(num_clusters):
    print(f"\nCluster {cluster_num}:")
    print(df[df['cluster'] == cluster_num]['description'].tolist())

